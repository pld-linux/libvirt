--- libvirt-6.6.0/src/remote/libvirtd.conf.in~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0/src/remote/libvirtd.conf.in	2021-07-08 18:11:11.683914079 +0000
@@ -134,7 +134,7 @@
 #          the network providing auth (eg, TLS/x509 certificates)
 #
 #  - sasl: use SASL infrastructure. The actual auth scheme is then
-#          controlled from @sysconfdir@/sasl2/libvirt.conf. For the TCP
+#          controlled from @sysconfdir@/sasl/libvirt.conf. For the TCP
 #          socket only GSSAPI & DIGEST-MD5 mechanisms will be used.
 #          For non-TCP or TLS sockets, any scheme is allowed.
 #
@@ -166,7 +166,7 @@
 # If you don't enable SASL, then all TCP traffic is cleartext.
 # Don't do this outside of a dev/test scenario. For real world
 # use, always enable SASL and use the GSSAPI or DIGEST-MD5
-# mechanism in @sysconfdir@/sasl2/libvirt.conf
+# mechanism in @sysconfdir@/sasl/libvirt.conf
 #auth_tcp = "sasl"
 
 # Change the authentication scheme for TLS sockets.
278c278
< editting <code>/etc/sasl2/libvirt.conf</code> to set the <code>mech_list</code>
---
> editting <code>/etc/sasl/libvirt.conf</code> to set the <code>mech_list</code>
--- libvirt-6.6.0/src/qemu/qemu.conf~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0/src/qemu/qemu.conf	2021-07-08 18:19:09.316683971 +0000
@@ -135,18 +135,18 @@
 # Examples include vinagre, virt-viewer and virt-manager
 # itself. UltraVNC, RealVNC, TightVNC do not support this
 #
-# It is necessary to configure /etc/sasl2/qemu.conf to choose
+# It is necessary to configure /etc/sasl/qemu.conf to choose
 # the desired SASL plugin (eg, GSSPI for Kerberos)
 #
 #vnc_sasl = 1
 
 
-# The default SASL configuration file is located in /etc/sasl2/
+# The default SASL configuration file is located in /etc/sasl/
 # When running libvirtd unprivileged, it may be desirable to
 # override the configs in this location. Set this parameter to
 # point to the directory, and create a qemu.conf in that location
 #
-#vnc_sasl_dir = "/some/directory/sasl2"
+#vnc_sasl_dir = "/some/directory/sasl"
 
 
 # QEMU implements an extension for providing audio over a VNC connection,
@@ -211,17 +211,17 @@
 # Enable use of SASL encryption on the SPICE server. This requires
 # a SPICE client which supports the SASL protocol extension.
 #
-# It is necessary to configure /etc/sasl2/qemu.conf to choose
+# It is necessary to configure /etc/sasl/qemu.conf to choose
 # the desired SASL plugin (eg, GSSPI for Kerberos)
 #
 #spice_sasl = 1
 
-# The default SASL configuration file is located in /etc/sasl2/
+# The default SASL configuration file is located in /etc/sasl/
 # When running libvirtd unprivileged, it may be desirable to
 # override the configs in this location. Set this parameter to
 # point to the directory, and create a qemu.conf in that location
 #
-#spice_sasl_dir = "/some/directory/sasl2"
+#spice_sasl_dir = "/some/directory/sasl"
 
 # Enable use of TLS encryption on the chardev TCP transports.
 #
--- libvirt-6.6.0//tests/qemuxml2argvdata/graphics-vnc-sasl.args~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0//tests/qemuxml2argvdata/graphics-vnc-sasl.args	2021-07-08 18:21:11.219952616 +0000
@@ -6,7 +6,7 @@
 XDG_DATA_HOME=/tmp/lib/domain--1-QEMUGuest1/.local/share \
 XDG_CACHE_HOME=/tmp/lib/domain--1-QEMUGuest1/.cache \
 XDG_CONFIG_HOME=/tmp/lib/domain--1-QEMUGuest1/.config \
-SASL_CONF_PATH=/root/.sasl2 \
+SASL_CONF_PATH=/root/.sasl \
 QEMU_AUDIO_DRV=none \
 /usr/bin/qemu-system-i386 \
 -name QEMUGuest1 \
--- libvirt-6.6.0/tests/qemuxml2argvdata/graphics-vnc-tls.args~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0/tests/qemuxml2argvdata/graphics-vnc-tls.args	2021-07-08 18:22:00.471277949 +0000
@@ -6,7 +6,7 @@
 XDG_DATA_HOME=/tmp/lib/domain--1-QEMUGuest1/.local/share \
 XDG_CACHE_HOME=/tmp/lib/domain--1-QEMUGuest1/.cache \
 XDG_CONFIG_HOME=/tmp/lib/domain--1-QEMUGuest1/.config \
-SASL_CONF_PATH=/root/.sasl2 \
+SASL_CONF_PATH=/root/.sasl \
 QEMU_AUDIO_DRV=none \
 /usr/bin/qemu-system-i386 \
 -name QEMUGuest1 \
--- libvirt-6.6.0/tests/virconfdata/libvirtd.conf~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0/tests/virconfdata/libvirtd.conf	2021-07-08 18:27:52.110787287 +0000
@@ -91,7 +91,7 @@
 #          the network providing auth (eg, TLS/x509 certificates)
 #
 #  - sasl: use SASL infrastructure. The actual auth scheme is then
-#          controlled from /etc/sasl2/libvirt.conf. For the TCP
+#          controlled from /etc/sasl/libvirt.conf. For the TCP
 #          socket only GSSAPI & DIGEST-MD5 mechanisms will be used.
 #          For non-TCP or TLS sockets,  any scheme is allowed.
 #
@@ -122,7 +122,7 @@
 # If you don't enable SASL, then all TCP traffic is cleartext.
 # Don't do this outside of a dev/test scenario. For real world
 # use, always enable SASL and use the GSSAPI or DIGEST-MD5
-# mechanism in /etc/sasl2/libvirt.conf
+# mechanism in /etc/sasl/libvirt.conf
 auth_tcp = "sasl"
 
 # Change the authentication scheme for TLS sockets.
--- libvirt-6.6.0/tests/virconfdata/libvirtd.out~	2020-07-21 13:34:45.000000000 +0000
+++ libvirt-6.6.0/tests/virconfdata/libvirtd.out	2021-07-08 18:28:48.448975223 +0000
@@ -73,7 +73,7 @@
 #          the network providing auth (eg, TLS/x509 certificates)
 #
 #  - sasl: use SASL infrastructure. The actual auth scheme is then
-#          controlled from /etc/sasl2/libvirt.conf. For the TCP
+#          controlled from /etc/sasl/libvirt.conf. For the TCP
 #          socket only GSSAPI & DIGEST-MD5 mechanisms will be used.
 #          For non-TCP or TLS sockets,  any scheme is allowed.
 #
@@ -102,7 +102,7 @@
 # If you don't enable SASL, then all TCP traffic is cleartext.
 # Don't do this outside of a dev/test scenario. For real world
 # use, always enable SASL and use the GSSAPI or DIGEST-MD5
-# mechanism in /etc/sasl2/libvirt.conf
+# mechanism in /etc/sasl/libvirt.conf
 auth_tcp = "sasl"
 # Change the authentication scheme for TLS sockets.
 #
